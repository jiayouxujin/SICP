#lang sicp


;exercise 3.4
(define (make-account amount password)
    (let ((time 0))
        (lambda(pass op)
            (if (not (eq? pass password))
                (lambda(x)
                    (set! time (+ 1 time))
                    (if (> time 7)
                        "call-the-cops"
                        "Incorrect password"
                    )
                )
                (begin (set! time 0)
                    (cond ((eq? op 'withdraw)
                        (lambda(x)
                            (if (>= amount x)
                                (begin (set! amount (- amount x)) amount)
                                "Insufficient funds"
                            )
                        )
                    )
                    ((eq? op 'deposit)
                        (lambda(x)
                            (set! amount (+ amount x))
                        amount)
                    )
                    (else (error "Unknown request: MAKE-ACCOUNT" op))    
                    )
                )
            )
        )
    )
)

(define acc (make-account 100 'secret-password))
((acc 'secret-password 'withdraw) 40)
((acc 'secret-password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)
((acc 'password 'deposit) 40)