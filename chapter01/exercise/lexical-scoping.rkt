#lang sicp
(define (sqrt x)
    (define (good-enough? guess)
        (define (square x)(* x x))
        (define (abs x)
            (if (< x 0)
                (- x)
                x)
        )

        (< (abs (- (square guess) x)) 0.001)
    )
    (define (improve guess)
        (define (average x y)
            (/ (+ x y) 2)
        )
        (average guess (/ x guess))
    )
    (define (sqrt-iter guess)
        (if (good-enough? guess)
            guess
            (sqrt-iter (improve guess))
        )
    )
    (sqrt-iter 1.0))

(sqrt 2)